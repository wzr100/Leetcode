问题定义：
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321


判断整数溢出

//C++
int reverse(int x) {
    int ans=0;
    int temp=0;
    while(x)
    {
        temp=x%10;
        if(ans>INT_MAX/10||(ans==INT_MAX/10&&temp>7))
            return 0;
        if(ans<INT_MIN/10||(ans==INT_MIN/10&&temp<-8))
            return 0;
        x/=10;
        ans=ans*10+temp;
    }
    return ans;

//python
注意点python负数取余时，n为除数，r=a-n*[a//n]
python会将a//n向下取整，而c++其他语言是向上取整。
    def reverse(self, x: int) -> int:
        ans = 0
        sign = 1
        temp=0
        INT_MAX=2**31-1
        INT_MIN=(-2)**31
        if x==INT_MIN:
            return 0
        if x<0:
            x=-1*x
            sign =-1
        while x:
            temp=x%10
            if ans> (INT_MAX/10) or (ans==INT_MAX/10 and temp>7):
                return 0
            x//=10
            ans=ans*10+temp
        return sign*ans
