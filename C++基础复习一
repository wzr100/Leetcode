GCC(GNU Compiler Collection,GNU编译器套件),是由 GNU 开发的编程语言编译器。
1.二叉搜索树平均时间复杂度，最坏情况

引入问题：什么是二叉平衡树、红黑树
红黑树和AVL树类似，都是在进行插入和删除操作时通过特定操作保持二叉查找树的平衡，从而获得较高的查找性能。
它虽然是复杂的，但它的最坏情况运行时间也是非常良好的，并且在实践中是高效的： 它可以在O(log n)时间内做查找，插入和删除，这里的n 是树中元素的数目。

2.vector扩容机制
底层是动态数组
size()返回容器的大小。
capacity()返回容器当前能够容纳的元素数量。
目的：采用采用成倍方式扩容，可以保证常数的时间复杂度，而增加指定大小的容量只能达到O(n)的时间复杂度，因此，使用成倍的方式扩容。
在STL中，拥有capacity属性的容器只有vector和string。


3.哪些stl底层是哈希表？ 
set：底层数据结构为红黑树，有序，不重复
multiset： 底层数据结构为红黑树，有序，可重复 （重复是指关键字重复）
map：底层数据结构为红黑树，有序，不重复
multimap：底层数据结构为红黑树，有序，可重复


4.c++中静态变量初始化是什么时候？ 
全局变量、文件域的静态变量和类的静态成员变量在main执行之前的静态初始化过程中分配内存并初始化；局部静态变量（一般为函数内的静态变量）在第一次使用时分配内存并初始化。这里的变量包含内置数据类型和自定义类型的对象。


5.左值右值
形式区分（或者称语法区分）是能否用取地址&运算符；
语义区分（即其本质涵义）在于表达式代表的是持久对象还是临时对象。


6.结构体对齐
每个成员按类型的大小对齐,即相对于结构体地址的成员地址能被类型大小整除


7.函数重载与覆盖
a.成员函数被重载的特征：
（1）相同的范围（在同一个类中）；
（2）函数名字相同；
（3）参数不同；
（4）virtual 关键字可有可无。

b.覆盖是指派生类函数覆盖基类函数，特征是：
（1）不同的范围（分别位于派生类与基类）；
（2）函数名字相同；
（3）参数相同；
（4）基类函数必须有virtual 关键字。


8.c++创建对象过程详解
创建对象的过程
1.分配内存空间
2.初始化成员变量
3.调用构造方法

过程（1）分配内存空间（A a 和 new A的不同）
对于全局对象，静态对象以及分配在栈区域内的对象，对它们的内存分配是在编译阶段就完成了，
而对于分配在堆区域内的对象，它们的分配是在程序运行阶段完成的。

过程（2）初始化成员变量（初始化 和 赋值）
初始化（Initialization）---------初始化列表实现
这一阶段是对象创建过程中最神秘的一个阶段，也是最容易被忽视的一个阶段。要想知道这一阶段具体完成那些任务，
关键是要区分两个容易混淆的概念：初始化 (Initialization)和赋值(Assignment)。初始化早于赋值，它是随着
对象的诞生一起进行的。而赋值是在对象诞生以后又给予它一个新的值

过程（3）调用构造函数
构造函数的使用
•构造函数重载
     –构造函数也是函数，拥有重载的特征
     –重载的构造函数在构造对象时根据参数自动选择

•构造函数可以使用默认参数
     –构造函数也拥有函数参数默认值的特性
     –使用默认值可以减少构造函数的个数

•构造函数的初始化列表
     –初始化列表可以让构造函数在被调用之前进行初始化工作
     –如果类的成员变量是const或引用类型，必须使用初始化列表初始化



9.


