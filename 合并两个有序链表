2019/12/27
合并两个有序链表思路：
1.新定义一个链表，和指向头结点指针*cur；
2.当l1和l2均不为空，遍历，哪个值小添加哪一个结点。
3.添加l1和l2剩下的非空链表
bool isSymmetric(TreeNode* root) {
    if(!root)return true;
    return isSymmetric1(root->left,root->right);
}
bool isSymmetric1(TreeNode* l1, TreeNode* l2){
    if(!l1 && !l2) return true;
    if(!l1 || !l2) return false;
    if(l1->val!=l2->val) return false;     
    return isSymmetric1(l1->left,l2->right) && isSymmetric1(l1->right,l2->left);
}


合并多个有序链表思路：
方法1：遍历列表，每次合并两个
ListNode* mergeKLists(vector<ListNode*>& lists) {
    ListNode* dummyHead =NULL;
    int n=lists.size();
    for(int i=0;i<n;i++){
        dummyHead=mergeTwoLists(dummyHead,lists[i]);
    }
    return dummyHead;
}
